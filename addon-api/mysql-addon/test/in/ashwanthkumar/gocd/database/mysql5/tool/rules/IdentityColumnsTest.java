/*
 * Copyright 2018 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package in.ashwanthkumar.gocd.database.mysql5.tool.rules;

import org.junit.Test;

import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.*;

public class IdentityColumnsTest {
    private static final String TEST_QUERY = "CREATE TABLE PipelineStates (\n" +
            "    id                      BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,\n" +
            "    pipelineName            VARCHAR_IGNORECASE(255) NOT NULL,\n" +
            "    locked                  BOOLEAN,\n" +
            "    lockedByPipelineId              BIGINT,\n" +
            ");";
    DDLPatch patcher = new IdentityColumns();

    @Test
    public void shouldMatchGenerateAsIdentityColumnSpec() {
        assertTrue(patcher.shouldPatch(TEST_QUERY));
    }

    @Test
    public void shouldPatchGenerateAsIdentityColumnSpec() {
        String expected = "CREATE TABLE PipelineStates (\n" +
                "    id                      BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,\n" +
                "    pipelineName            VARCHAR_IGNORECASE(255) NOT NULL,\n" +
                "    locked                  BOOLEAN,\n" +
                "    lockedByPipelineId              BIGINT,\n" +
                ");";

        assertThat(patcher.patch(TEST_QUERY), is(expected));
    }



}